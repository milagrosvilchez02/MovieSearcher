{"version":3,"sources":["components/common/TableHeader.jsx","components/common/TableBody.jsx","components/common/Table.jsx","components/common/Like.jsx","components/MoviesTable.jsx","components/common/ListGroup.jsx","components/common/Pagination.jsx","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","utils/paginate.js","components/SearchBox.jsx","components/Movies.jsx","components/common/Input.jsx","components/common/Select.jsx","components/common/Form.jsx","components/MovieForm.jsx","components/Customers.jsx","components/Rentals.jsx","components/NotFound.jsx","components/NavBar.jsx","components/LoginForm.jsx","services/userService.js","components/RegisterForm.jsx","App.js","index.js"],"names":["TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","onClick","label","key","Component","TableBody","renderCell","item","content","_","get","createKey","_id","data","Table","Like","src","liked","style","cursor","alt","MoviesTable","movie","to","title","onLike","onDelete","movies","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","init","log","error","console","Axios","interceptors","response","use","status","logger","toast","Promise","reject","post","put","delete","apiEndPoint","apiUrl","movieUrl","id","getMovie","movieId","http","saveMovie","body","deleteMovie","getGenres","paginate","pageNumber","startIndex","slice","take","value","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","a","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","push","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","LoginForm","username","password","register","user","email","RegisterForm","userService","App","Fragment","component","from","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dae8e2be.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableBody from \"./TableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ liked, onClick }) => {\r\n  let src;\r\n\r\n  !liked\r\n    ? (src =\r\n        \"https://img.icons8.com/external-those-icons-lineal-those-icons/24/000000/external-like-feedback-those-icons-lineal-those-icons.png\")\r\n    : (src =\r\n        \"https://img.icons8.com/external-those-icons-fill-those-icons/24/000000/external-like-feedback-those-icons-fill-those-icons.png\");\r\n\r\n  return (\r\n    <img\r\n      onClick={onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      src={src}\r\n      alt=\"Like button\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/Table\";\r\nimport Like from \"./common/Like\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    {\r\n      path: \"genre.name\",\r\n      label: \"Genre\",\r\n    },\r\n    {\r\n      path: \"numberInStock\",\r\n      label: \"Stock\",\r\n    },\r\n    {\r\n      path: \"dailyRentalRate\",\r\n      label: \"Rate\",\r\n    },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (movie) => (\r\n        <button\r\n          onClick={() => this.props.onDelete(movie)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  selectedItem,\r\n  onItemSelect,\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","function init() {}\r\n\r\nfunction log(error) {\r\n  console.log(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log,\r\n};\r\n","import Axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nAxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"Unexpected error\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: Axios.get,\r\n  post: Axios.post,\r\n  put: Axios.put,\r\n  delete: Axios.delete,\r\n};\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndPoint = apiUrl + \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndPoint}/${id}`;\r\n}\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nexport function getGenres() {\r\n  return http.get(apiUrl + \"/genres\");\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  // to paginate the data first we need to calculate the starting\r\n  // index of the items on this page (pageNumber)\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n\r\n  // Now we can use lodash to go to this startIndex and take all\r\n  // the items for the current page.\r\n\r\n  // This method will slice our array starting from startIndex\r\n  // _.slice(items, startIndex);\r\n\r\n  // Now that we have a new array we can go to this array and\r\n  // pick items for the current page. Lodash has a method for that.\r\n  // The take method: we give it an array and the total number of\r\n  // items we wanna take from that array.\r\n\r\n  // In order to call this methods using a chain, first we need to\r\n  // convert this items array to a lodash wrapper:\r\n  // _(items);\r\n  // This will return a lodash object and with that we can chain all\r\n  // the lodash methods like this:\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport MoviesTable from \"./MoviesTable\";\r\nimport ListGroup from \"./common/ListGroup\";\r\nimport Pagination from \"./common/Pagination\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) console.log(\"x\");\r\n      toast.error(\"This movie has already been deleted.\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n\r\n    if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGenreSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <Link\r\n            to=\"/movies/new\"\r\n            className=\"btn btn-primary\"\r\n            style={{ marginBottom: 20 }}\r\n          >\r\n            New Movie\r\n          </Link>\r\n          <p>Showing {totalCount} movies in the database.</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/Form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>NotFound</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Vidly\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link active\"\r\n                aria-current=\"page\"\r\n                to=\"/movies\"\r\n              >\r\n                Movies\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/customers\">\r\n                Customers\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/rentals\">\r\n                Rentals\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink className=\"nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/Form\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = () => {\r\n    // call the server\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndPoint = apiUrl + \"//users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/Form\";\r\nimport * as userService from \"../services/userService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().email().label(\"Username\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = () => {\r\n    userService.register();\r\n    console.log(\"Submitted\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/Movies\";\nimport MovieForm from \"./components/MovieForm\";\nimport Customers from \"./components/Customers\";\nimport Rentals from \"./components/Rentals\";\nimport NotFound from \"./components/NotFound\";\nimport NavBar from \"./components/NavBar\";\nimport LoginForm from \"./components/LoginForm\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <ToastContainer />\n      <NavBar />\n      <main className=\"container\">\n        <Switch>\n          <Route path=\"/register\" component={RegisterForm} />\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/movies/:id\" component={MovieForm} />\n          <Route path=\"/movies\" component={Movies} />\n          <Route path=\"/customers\" component={Customers} />\n          <Route path=\"/rentals\" component={Rentals} />\n          <Route path=\"/not-found\" component={NotFound} />\n          <Redirect from=\"/\" exact to=\"/movies\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}